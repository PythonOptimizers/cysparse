from cysparse.types.cysparse_types cimport *

from cysparse.sparse.ll_mat_matrices.ll_mat_@index@_@type@ cimport LLSparseMatrix_@index@_@type@
from cysparse.sparse.csc_mat_matrices.csc_mat_@index@_@type@ cimport CSCSparseMatrix_@index@_@type@


cdef extern from "umfpack.h":
    cdef enum:
        UMFPACK_CONTROL, UMFPACK_INFO


cdef class UmfpackContext_@index@_@type@:
    cdef:
        LLSparseMatrix_@index@_@type@ A

        @index@ nrow
        @index@ ncol
        @index@ nnz

        # Matrix A in CSC format
        CSCSparseMatrix_@index@_@type@ csc_mat

        # UMFPACK opaque objects
        void * symbolic
        bint symbolic_computed

        void * numeric
        bint numeric_computed

        # Control and Info arrays
        public double info[UMFPACK_INFO]
        public double control[UMFPACK_CONTROL]

{% if type in complex_list %}
        # we keep internally two arrays for the complex numbers: this is required by UMFPACK...
        @type|cysparse_real_type_from_real_cysparse_complex_type@ * csc_rval
        @type|cysparse_real_type_from_real_cysparse_complex_type@ * csc_ival

        bint internal_real_arrays_computed

    cdef create_real_arrays_if_needed(self)
{% endif %}

    cdef int _create_symbolic(self)
    cdef int _create_numeric(self)

