"""
Write MatrixMarket format matrices.

See http://math.nist.gov/MatrixMarket/
"""
from sparse_lib.cysparse_types cimport *

from sparse_lib.sparse.ll_mat cimport LLSparseMatrix

from sparse_lib.utils.time_utils import time_stamp


cdef MakeMMFileFromSparseMatrix(str mm_filename, LLSparseMatrix A):
    """
    Create a text file in Matrix Market format.

    Warning:
        No test is done to assess the existence or not of a file with the same name. Any existing file will be overwritten.
    """
    # TODO: rewrite completely this function
    # TODO: fix number formats
    cdef:
        str data_type
        str storage_scheme

    cdef SIZE_t i, j, k
    cdef FLOAT_t val, ival

    if A.is_complex:
        data_type = MM_COMPLEX_STR
    else:
        data_type = MM_REAL_STR

    if A.is_symmetric:
        storage_scheme = MM_SYMM_STR
    else:
        storage_scheme = MM_GENERAL_STR


    with open(mm_filename, 'w') as f:
        f.write("%s %s %s %s %s\n" % (MM_MATRIX_MARKET_BANNER_STR, MM_MTX_STR, MM_COORDINATE_STR, data_type, storage_scheme))

        f.write("%% This file was generated by CySparse on %s\n" % time_stamp())

        f.write("%d %d %d\n" % (A.nrow, A.ncol, A.nnz))

        for i from 0 <= i < A.nrow:
            k = A.root[i]
            while k != -1:
                j = A.col[k]
                val = A.val[k]
                if A.is_complex:
                    ival = A.ival[k]
                    f.write("%d %d %f %f\n" % (i + 1, j + 1, val, ival))
                else:
                    f.write("%d %d %f\n" % (i + 1, j + 1, val))

                k = A.link[k]