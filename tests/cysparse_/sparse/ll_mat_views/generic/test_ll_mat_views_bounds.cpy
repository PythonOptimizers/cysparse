# THIS FILE DOES NOT WORK

#!/usr/bin/env python

"""
This file tests the bounds of an :class:`LLSparseMatrixView` object.

     If this is a python script (.py), it has been automatically generated by the 'generate_code.py' script.

"""
from cysparse.sparse.ll_mat import *
from cysparse.types.cysparse_types import *
import numpy as np

import unittest

import sys

########################################################################################################################
# Tests
########################################################################################################################
class CySparseLLSparseMatrixBoundsBaseTestCase(unittest.TestCase):
    def setUp(self):
        pass

class CySparseLLSparseMatrixViewOutOfBoundsTestCase(CySparseLLSparseMatrixBoundsBaseTestCase):
    """
    Test out of bounds case.
    """
    def setUp(self):
        self.nbr_of_elements = 10
        self.nrow = 4
        self.ncol = 6

{% for index_type in index_list %}
  {% set outerloop = loop %}
  {% for element_type in complex_list %}
        self.l_@outerloop.index@_@loop.index@ = NewLinearFillLLSparseMatrix(nrow=self.nrow, ncol=self.ncol, itype=@index_type|type2enum@, dtype=@element_type|type2enum@, row_wise=False)
        self.l_@outerloop.index@_@loop.index@_csr = self.l_@outerloop.index@_@loop.index@.to_csr()
  {% endfor %}
{% endfor %}

{% for element_type in complex_list %}
        self.x_@element_type@ = np.ones(self.nrow, dtype=np.@element_type|type2enum|cysparse_type_to_numpy_type@)
{% endfor %}

    def test_simple_out_of_bound(self):
{% for index_type in index_list %}
  {% set outerloop = loop %}
  {% for element_type in complex_list %}
        l_y = self.l_@outerloop.index@_@loop.index@.matvec_htransp(self.x_@element_type@)
        csr_y = self.l_@outerloop.index@_@loop.index@_csr.matvec_htransp(self.x_@element_type@)
        for i in xrange(self.ncol):
            self.failUnless(l_y[i] == csr_y[i])
  {% endfor %}
{% endfor %}