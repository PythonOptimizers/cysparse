LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(3, 4) with 12 non zero values <Storage scheme: General and without zeros>
2.000000-9.700000j 2.000000-11.800000j 2.000000-13.900000j 2.000000-16.000000j 
2.000000-10.400000j 2.000000-12.500000j 2.000000-14.600000j 2.000000-16.700000j 
2.000000-11.100000j 2.000000-13.200000j 2.000000-15.300000j 2.000000-17.400000j 
********************************************************************************
matvec
[-84.86+0.24j -91.02+0.8j -97.18+1.36j]
[-84.86+0.24j -91.02+0.8j -97.18+1.36j]
[-84.86+0.24j -91.02+0.8j -97.18+1.36j]
********************************************************************************
matvec_transp
[ 2.12-32.0j  1.28-38.3j  0.44-44.6j -0.4-50.9j]
[ 2.12-32.0j  1.28-38.3j  0.44-44.6j -0.4-50.9j]
[ 2.12-32.0j  1.28-38.3j  0.44-44.6j -0.4-50.9j]
[ 2.12-32.0j  1.28-38.3j  0.44-44.6j -0.4-50.9j]
[ 2.12-32.0j  1.28-38.3j  0.44-44.6j -0.4-50.9j]
[ 2.12-32.0j  1.28-38.3j  0.44-44.6j -0.4-50.9j]
********************************************************************************
matvec_htransp
[ 9.88+30.4j  10.72+36.7j  11.56+43.0j  12.4+49.3j]
[ 9.88+30.4j  10.72+36.7j  11.56+43.0j  12.4+49.3j]
[ 9.88+30.4j  10.72+36.7j  11.56+43.0j  12.4+49.3j]
[ 9.88+30.4j  10.72+36.7j  11.56+43.0j  12.4+49.3j]
[ 9.88+30.4j  10.72+36.7j  11.56+43.0j  12.4+49.3j]
[ 9.88+30.4j  10.72+36.7j  11.56+43.0j  12.4+49.3j]
********************************************************************************
matvec_conj
[ 81.66-35.44j  87.82-36.0j  93.98-36.56j]
[ 81.66-35.44j  87.82-36.0j  93.98-36.56j]
[ 81.66-35.44j  87.82-36.0j  93.98-36.56j]
[ 81.66-35.44j  87.82-36.0j  93.98-36.56j]
[ 81.66-35.44j  87.82-36.0j  93.98-36.56j]
[ 81.66-35.44j  87.82-36.0j  93.98-36.56j]
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(2, 2) with 1 non zero values <Storage scheme: Symmetric and without zeros>
0.000000+0.000000j 1.000000+1.000000j 
1.000000+1.000000j 0.000000+0.000000j 
********************************************************************************
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(2, 3) with 4 non zero values <Storage scheme: General and without zeros>
0.000000+0.000000j 1.000000+1.000000j 1.000000+1.000000j 
1.000000+1.000000j 0.000000+0.000000j 12.000000-1.000000j 
////////////////////////////////////////////////////////////////////////////////
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(2, 3) with 2 non zero values <Storage scheme: General and without zeros>
   ---        ---      1.000000 + 1.000000j    ---        ---     
   ---        ---        ---        ---     12.000000 - 1.000000j 


LLSparseMatrix [INT64_t, FLOAT64_t] of size=(3, 4) with 3 non zero values <Storage scheme: General and without zeros>
 0.000000  0.000000  0.000000  0.000000 
 1.000000  0.000000  0.000000  0.000000 
 1.000000  2.000000  0.000000  0.000000 
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(3, 2) with 3 non zero values <Storage scheme: General and without zeros>
 1.000000  1.000000 
 0.000000  2.000000 
 0.000000  0.000000 
================================================================================
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(4, 2) with 1 non zero values <Storage scheme: General and without zeros>
 0.000000  2.000000 
 0.000000  0.000000 
 0.000000  0.000000 
 0.000000  0.000000 
type 1 is UINT32_t
0
0
Is type INT32_t really type INT32_t? True
Is type INT32_t an integer? True
Is type FLOAT32_T an integer?False
================================================================================
result types:
(INT32_t) + (INT32_t):  -> (INT32_t)
(INT32_t) + (UINT32_t):  -> (INT64_t)
(INT32_t) + (INT64_t):  -> (INT64_t)
(INT32_t) + (UINT64_t):
    type error: INT32_t and UINT64_t are incompatible
(INT32_t) + (FLOAT32_t):  -> (FLOAT32_t)
(INT32_t) + (FLOAT64_t):  -> (FLOAT64_t)
(INT32_t) + (FLOAT128_t):  -> (FLOAT128_t)
(INT32_t) + (COMPLEX64_t):  -> (COMPLEX64_t)
(INT32_t) + (COMPLEX128_t):  -> (COMPLEX128_t)
(INT32_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(UINT32_t) + (INT32_t):  -> (INT64_t)
(UINT32_t) + (UINT32_t):  -> (UINT32_t)
(UINT32_t) + (INT64_t):  -> (INT64_t)
(UINT32_t) + (UINT64_t):  -> (UINT64_t)
(UINT32_t) + (FLOAT32_t):  -> (FLOAT32_t)
(UINT32_t) + (FLOAT64_t):  -> (FLOAT64_t)
(UINT32_t) + (FLOAT128_t):  -> (FLOAT128_t)
(UINT32_t) + (COMPLEX64_t):  -> (COMPLEX64_t)
(UINT32_t) + (COMPLEX128_t):  -> (COMPLEX128_t)
(UINT32_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(INT64_t) + (INT32_t):  -> (INT64_t)
(INT64_t) + (UINT32_t):  -> (INT64_t)
(INT64_t) + (INT64_t):  -> (INT64_t)
(INT64_t) + (UINT64_t):
    type error: INT64_t and UINT64_t are incompatible
(INT64_t) + (FLOAT32_t):  -> (FLOAT64_t)
(INT64_t) + (FLOAT64_t):  -> (FLOAT64_t)
(INT64_t) + (FLOAT128_t):  -> (FLOAT128_t)
(INT64_t) + (COMPLEX64_t):  -> (COMPLEX128_t)
(INT64_t) + (COMPLEX128_t):  -> (COMPLEX128_t)
(INT64_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(UINT64_t) + (INT32_t):
    type error: INT32_t and UINT64_t are incompatible
(UINT64_t) + (UINT32_t):  -> (UINT64_t)
(UINT64_t) + (INT64_t):
    type error: INT64_t and UINT64_t are incompatible
(UINT64_t) + (UINT64_t):  -> (UINT64_t)
(UINT64_t) + (FLOAT32_t):  -> (FLOAT64_t)
(UINT64_t) + (FLOAT64_t):  -> (FLOAT64_t)
(UINT64_t) + (FLOAT128_t):  -> (FLOAT128_t)
(UINT64_t) + (COMPLEX64_t):  -> (COMPLEX128_t)
(UINT64_t) + (COMPLEX128_t):  -> (COMPLEX128_t)
(UINT64_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(FLOAT32_t) + (INT32_t):  -> (FLOAT32_t)
(FLOAT32_t) + (UINT32_t):  -> (FLOAT32_t)
(FLOAT32_t) + (INT64_t):  -> (FLOAT64_t)
(FLOAT32_t) + (UINT64_t):  -> (FLOAT64_t)
(FLOAT32_t) + (FLOAT32_t):  -> (FLOAT32_t)
(FLOAT32_t) + (FLOAT64_t):  -> (FLOAT64_t)
(FLOAT32_t) + (FLOAT128_t):  -> (FLOAT128_t)
(FLOAT32_t) + (COMPLEX64_t):  -> (COMPLEX64_t)
(FLOAT32_t) + (COMPLEX128_t):  -> (COMPLEX128_t)
(FLOAT32_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(FLOAT64_t) + (INT32_t):  -> (FLOAT64_t)
(FLOAT64_t) + (UINT32_t):  -> (FLOAT64_t)
(FLOAT64_t) + (INT64_t):  -> (FLOAT64_t)
(FLOAT64_t) + (UINT64_t):  -> (FLOAT64_t)
(FLOAT64_t) + (FLOAT32_t):  -> (FLOAT64_t)
(FLOAT64_t) + (FLOAT64_t):  -> (FLOAT64_t)
(FLOAT64_t) + (FLOAT128_t):  -> (FLOAT128_t)
(FLOAT64_t) + (COMPLEX64_t):  -> (COMPLEX128_t)
(FLOAT64_t) + (COMPLEX128_t):  -> (COMPLEX128_t)
(FLOAT64_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(FLOAT128_t) + (INT32_t):  -> (FLOAT128_t)
(FLOAT128_t) + (UINT32_t):  -> (FLOAT128_t)
(FLOAT128_t) + (INT64_t):  -> (FLOAT128_t)
(FLOAT128_t) + (UINT64_t):  -> (FLOAT128_t)
(FLOAT128_t) + (FLOAT32_t):  -> (FLOAT128_t)
(FLOAT128_t) + (FLOAT64_t):  -> (FLOAT128_t)
(FLOAT128_t) + (FLOAT128_t):  -> (FLOAT128_t)
(FLOAT128_t) + (COMPLEX64_t):  -> (COMPLEX256_t)
(FLOAT128_t) + (COMPLEX128_t):  -> (COMPLEX256_t)
(FLOAT128_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(COMPLEX64_t) + (INT32_t):  -> (COMPLEX64_t)
(COMPLEX64_t) + (UINT32_t):  -> (COMPLEX64_t)
(COMPLEX64_t) + (INT64_t):  -> (COMPLEX128_t)
(COMPLEX64_t) + (UINT64_t):  -> (COMPLEX128_t)
(COMPLEX64_t) + (FLOAT32_t):  -> (COMPLEX64_t)
(COMPLEX64_t) + (FLOAT64_t):  -> (COMPLEX128_t)
(COMPLEX64_t) + (FLOAT128_t):  -> (COMPLEX256_t)
(COMPLEX64_t) + (COMPLEX64_t):  -> (COMPLEX64_t)
(COMPLEX64_t) + (COMPLEX128_t):  -> (COMPLEX128_t)
(COMPLEX64_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(COMPLEX128_t) + (INT32_t):  -> (COMPLEX128_t)
(COMPLEX128_t) + (UINT32_t):  -> (COMPLEX128_t)
(COMPLEX128_t) + (INT64_t):  -> (COMPLEX128_t)
(COMPLEX128_t) + (UINT64_t):  -> (COMPLEX128_t)
(COMPLEX128_t) + (FLOAT32_t):  -> (COMPLEX128_t)
(COMPLEX128_t) + (FLOAT64_t):  -> (COMPLEX128_t)
(COMPLEX128_t) + (FLOAT128_t):  -> (COMPLEX256_t)
(COMPLEX128_t) + (COMPLEX64_t):  -> (COMPLEX128_t)
(COMPLEX128_t) + (COMPLEX128_t):  -> (COMPLEX128_t)
(COMPLEX128_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (INT32_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (UINT32_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (INT64_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (UINT64_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (FLOAT32_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (FLOAT64_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (FLOAT128_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (COMPLEX64_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (COMPLEX128_t):  -> (COMPLEX256_t)
(COMPLEX256_t) + (COMPLEX256_t):  -> (COMPLEX256_t)
================================================================================
[0, 2]
Basic types in CySparse:

INT32_t     :         32 bits (0) (min, max) = (-2147483648,2147483647)
UINT32_t    :         32 bits (1) (min, max) = (0,4294967295)
INT64_t     :         64 bits (2) (min, max) = (-9223372036854775808,9223372036854775807)
UINT64_t    :         64 bits (3) (min, max) = (0,18446744073709551615)
FLOAT32_t   :         32 bits (4) (min precision, max precision) = (1.17549435082e-38,3.40282346639e+38)
FLOAT64_t   :         64 bits (5) (min precision, max precision) = (2.22507385851e-308,1.79769313486e+308)
FLOAT128_t  :        128 bits (6) (min precision, max precision) = (0.0,inf)
COMPLEX64_t :         64 bits (7) (min precision real/imag, max precision real/imag) = (1.17549435082e-38,3.40282346639e+38)
COMPLEX128_t:        128 bits (8) (min precision real/imag, max precision real/imag) = (2.22507385851e-308,1.79769313486e+308)
COMPLEX256_t:        256 bits (9) (min precision real/imag, max precision real/imag) = (0.0,inf)
================================================================================
(INT32_t) + (FLOAT32_t):  -> (FLOAT32_t)
================================================================================
self.failUnless(is_element_type(INT32_t) == True)
self.failUnless(is_element_type(UINT32_t) == True)
self.failUnless(is_element_type(INT64_t) == True)
self.failUnless(is_element_type(UINT64_t) == True)
self.failUnless(is_element_type(FLOAT32_t) == True)
self.failUnless(is_element_type(FLOAT64_t) == True)
self.failUnless(is_element_type(FLOAT128_t) == True)
self.failUnless(is_element_type(COMPLEX64_t) == True)
self.failUnless(is_element_type(COMPLEX128_t) == True)
self.failUnless(is_element_type(COMPLEX256_t) == True)
================================================================================
Numpy types
[ 2.   4.   5.8]
FLOAT64_t
[2 4 5]
uint32
================================================================================
inf
True
nan
nan
nan
LLSparseMatrix [INT64_t, COMPLEX128_t] of size=(4, 4) with 2 non zero values <Storage scheme: General and without zeros>
3.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
inf+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
================================================================================
174224571863520493293247799005065324265472
LLSparseMatrix [INT64_t, FLOAT32_t] of size=(2, 2) with 4 non zero values <Storage scheme: General and without zeros>
232.000000  1.300000 
      nan       inf 
================================================================================
LLSparseMatrix [INT64_t, INT64_t] of size=(2, 2) with 2 non zero values <Storage scheme: General and without zeros>
232.000000  1.000000 
 0.000000  0.000000 
LLSparseMatrix [INT64_t, INT64_t] of size=(2, 2) with 2 non zero values <Storage scheme: General and without zeros>
53824.000000 232.000000 
 0.000000  0.000000 
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(3, 4) with 8 non zero values <Storage scheme: General and without zeros>
 3.800000  3.800000  3.800000  3.800000 
 3.800000  3.800000  0.000000  0.000000 
 3.800000  0.000000  3.800000  0.000000 
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 5) with 5 non zero values <Storage scheme: General and without zeros>
      nan     ---        ---        ---        ---     
   ---      5.600000   6.700000     ---        ---     
   ---        ---     45.000000     ---        ---     
   ---        ---           inf     ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     


LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 5) with 6 non zero values <Storage scheme: General and without zeros>
      nan  0.000000  0.000000  0.000000  0.000000 
 0.000000  5.600000  6.700000  0.000000  0.000000 
 0.000000  0.000000 45.000000  0.000000  0.000000 
 0.000000 98374983.093843       inf  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
================================================================================
ind:
0 1 3 6 6 6 
row:
0 1 3 1 2 3 
val:
nan == 5.6 == 98374983.0938 == 6.7 == 45.0 == inf == 
CSCSparseMatrix ([10,5]):
      nan  0.000000  0.000000  0.000000  0.000000 
 0.000000  5.600000  6.700000  0.000000  0.000000 
 0.000000  0.000000 45.000000  0.000000  0.000000 
 0.000000 98374983.093843       inf  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 
Proxy to the transposed (.T) of CSCSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 5) with 6 non zero values <Storage scheme: General and without zeros>
      nan     ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---      5.600000     ---      9.84e+07     ---        ---        ---        ---        ---        ---     
   ---      6.700000  45.000000        inf     ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     


CSCSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 5) with 6 non zero values <Storage scheme: General and without zeros>
      nan     ---        ---        ---        ---     
   ---      5.600000   6.700000     ---        ---     
   ---        ---     45.000000     ---        ---     
   ---      9.84e+07        inf     ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     


[               nan  98374988.69384348                inf         0.
         0.        ]
LLSparseMatrix [INT32_t, FLOAT64_t] of size=(3, 4) with 9 non zero values <Storage scheme: General and without zeros>
 0.814724     ---      0.278498     ---     
 0.905792   0.632359   0.546882   0.157613  
 0.126987   0.097540   0.957507     ---     


LLSparseMatrix [INT32_t, FLOAT64_t] of size=(3, 4) with 9 non zero values <Storage scheme: General and without zeros>
 0.814724  0.000000  0.278498  0.000000 
 0.905792  0.632359  0.546882  0.157613 
 0.126987  0.097540  0.957507  0.000000 
================================================================================
CSCSparseMatrix [INT32_t, FLOAT64_t] of size=(3, 4) with 9 non zero values <Storage scheme: General and without zeros>
 0.814724     ---      0.278498     ---     
 0.905792   0.632359   0.546882   0.157613  
 0.126987   0.097540   0.957507     ---     


CSCSparseMatrix ([3,4]):
 0.814724  0.000000  0.278498  0.000000 
 0.905792  0.632359  0.546882  0.157613 
 0.126987  0.097540  0.957507  0.000000 
Internal arrays as NumPy arrays:
[0 3 5 8 9]
[0 1 2 1 2 0 1 2 1]
[ 0.81472369  0.90579194  0.12698682  0.63235925  0.0975404   0.27849822
  0.54688152  0.95750684  0.15761308]
Internal arrays as C-pointers: (but you can not do anything with it in Python)
Diagonal as NumPy array:
[ 0.81472369  0.63235925  0.95750684]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CSRSparseMatrix [INT32_t, FLOAT64_t] of size=(3, 4) with 9 non zero values <Storage scheme: General and without zeros>
 0.814724     ---      0.278498     ---     
 0.905792   0.632359   0.546882   0.157613  
 0.126987   0.097540   0.957507     ---     


CSRSparseMatrix [INT32_t, FLOAT64_t] of size=(3, 4) with 9 non zero values <Storage scheme: General and without zeros>
 0.814724  0.000000  0.278498  0.000000 
 0.905792  0.632359  0.546882  0.157613 
 0.126987  0.097540  0.957507  0.000000 
Internal arrays as NumPy arrays:
[0 2 6 9]
[0 2 0 1 2 3 0 1 2]
[ 0.81472369  0.27849822  0.90579194  0.63235925  0.54688152  0.15761308
  0.12698682  0.0975404   0.95750684]
Diagonal as NumPy array:
[ 0.81472369  0.63235925  0.95750684]
Initial matrix
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 3) with 15 non zero values <Storage scheme: General and without zeros>
 1.000000  6.000000 11.000000 
 2.000000  7.000000 12.000000 
 3.000000  8.000000 13.000000 
 4.000000  9.000000 14.000000 
 5.000000 10.000000 15.000000 
================================================================================
LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(4, 3) with 4 non zero values <Storage scheme: General and without zeros>
0.000000+0.000000j 1.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 1.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 1.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 1.000000+0.000000j 0.000000+0.000000j 
LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(4, 3) with 3 non zero values <Storage scheme: General and without zeros>
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
1.000000+0.000000j 1.000000+0.000000j 1.000000+0.000000j 
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
================================================================================
LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(4, 3) with 6 non zero values <Storage scheme: General and without zeros>
0.000000+0.000000j 1.000000+0.000000j 0.000000+0.000000j 
10.000000+10.010000j 11.000000+10.010000j 10.000000+10.010000j 
0.000000+0.000000j 1.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 1.000000+0.000000j 0.000000+0.000000j 
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 0 non zero values <Storage scheme: General and without zeros>
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     


<type 'cysparse.sparse.ll_mat_matrices.ll_mat_INT64_t_FLOAT64_t.LLSparseMatrix_INT64_t_FLOAT64_t'>
64
6400
1040
80
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 5 non zero values <Storage scheme: General and without zeros>
      nan     ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---      5.600000   6.700000     ---        ---        ---        ---        ---        ---        ---     
   ---        ---      4.50e+20     ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---           inf  


4.5e+20
nan
[(0, 0), (1, 1), (1, 2), (2, 2), (9, 9)]
[nan, 5.6, 6.7, 4.5e+20, inf]
[((0, 0), nan), ((1, 1), 5.6), ((1, 2), 6.7), ((2, 2), 4.5e+20), ((9, 9), inf)]
(array([0, 1, 1, 2, 9]), array([0, 1, 2, 2, 9]), array([             nan,   5.60000000e+00,   6.70000000e+00,
         4.50000000e+20,              inf]))
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 6 non zero values <Storage scheme: General and without zeros>
      nan  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  5.600000  6.700000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000 450000000000000000000.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 98374983.093843  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000       inf 
============================================LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 0 non zero values <Storage scheme: General and without zeros>
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     


<type 'cysparse.sparse.ll_mat_matrices.ll_mat_INT64_t_FLOAT64_t.LLSparseMatrix_INT64_t_FLOAT64_t'>
64
6400
1040
80
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 5 non zero values <Storage scheme: General and without zeros>
      nan     ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---      5.600000   6.700000     ---        ---        ---        ---        ---        ---        ---     
   ---        ---      4.50e+20     ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---           inf  


4.5e+20
nan
[(0, 0), (1, 1), (1, 2), (2, 2), (9, 9)]
[nan, 5.6, 6.7, 4.5e+20, inf]
[((0, 0), nan), ((1, 1), 5.6), ((1, 2), 6.7), ((2, 2), 4.5e+20), ((9, 9), inf)]
(array([0, 1, 1, 2, 9]), array([0, 1, 2, 2, 9]), array([             nan,   5.60000000e+00,   6.70000000e+00,
         4.50000000e+20,              inf]))
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 8 non zero values <Storage scheme: General and without zeros>
 4.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 8.000000  5.600000  6.700000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 5.000000  0.000000 450000000000000000000.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 98374983.093843  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000       inf 
================================================================================
CSRSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 8 non zero values <Storage scheme: General and without zeros>
 4.000000     ---        ---        ---        ---        ---        ---        ---        ---        ---     
 8.000000   5.600000   6.700000     ---        ---        ---        ---        ---        ---        ---     
 5.000000     ---      4.50e+20     ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---      9.84e+07     ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---           inf  


CSRSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 8 non zero values <Storage scheme: General and without zeros>
 4.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 8.000000  5.600000  6.700000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 5.000000  0.000000 450000000000000000000.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 98374983.093843  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000       inf 
True
( 0 , 0 ) =  4.0   ( 0 , 1 ) =  0.0   ( 0 , 2 ) =  0.0   ( 0 , 3 ) =  0.0   ( 0 , 4 ) =  0.0   ( 0 , 5 ) =  0.0   ( 0 , 6 ) =  0.0   ( 0 , 7 ) =  0.0   ( 0 , 8 ) =  0.0   ( 0 , 9 ) =  0.0   

( 1 , 0 ) =  8.0   ( 1 , 1 ) =  5.6   ( 1 , 2 ) =  6.7   ( 1 , 3 ) =  0.0   ( 1 , 4 ) =  0.0   ( 1 , 5 ) =  0.0   ( 1 , 6 ) =  0.0   ( 1 , 7 ) =  0.0   ( 1 , 8 ) =  0.0   ( 1 , 9 ) =  0.0   

( 2 , 0 ) =  5.0   ( 2 , 1 ) =  0.0   ( 2 , 2 ) =  4.5e+20   ( 2 , 3 ) =  0.0   ( 2 , 4 ) =  0.0   ( 2 , 5 ) =  0.0   ( 2 , 6 ) =  0.0   ( 2 , 7 ) =  0.0   ( 2 , 8 ) =  0.0   ( 2 , 9 ) =  0.0   

( 3 , 0 ) =  0.0   ( 3 , 1 ) =  0.0   ( 3 , 2 ) =  0.0   ( 3 , 3 ) =  0.0   ( 3 , 4 ) =  0.0   ( 3 , 5 ) =  0.0   ( 3 , 6 ) =  0.0   ( 3 , 7 ) =  0.0   ( 3 , 8 ) =  0.0   ( 3 , 9 ) =  0.0   

( 4 , 0 ) =  0.0   ( 4 , 1 ) =  0.0   ( 4 , 2 ) =  0.0   ( 4 , 3 ) =  0.0   ( 4 , 4 ) =  0.0   ( 4 , 5 ) =  98374983.0938   ( 4 , 6 ) =  0.0   ( 4 , 7 ) =  0.0   ( 4 , 8 ) =  0.0   ( 4 , 9 ) =  0.0   

( 5 , 0 ) =  0.0   ( 5 , 1 ) =  0.0   ( 5 , 2 ) =  0.0   ( 5 , 3 ) =  0.0   ( 5 , 4 ) =  0.0   ( 5 , 5 ) =  0.0   ( 5 , 6 ) =  0.0   ( 5 , 7 ) =  0.0   ( 5 , 8 ) =  0.0   ( 5 , 9 ) =  0.0   

( 6 , 0 ) =  0.0   ( 6 , 1 ) =  0.0   ( 6 , 2 ) =  0.0   ( 6 , 3 ) =  0.0   ( 6 , 4 ) =  0.0   ( 6 , 5 ) =  0.0   ( 6 , 6 ) =  0.0   ( 6 , 7 ) =  0.0   ( 6 , 8 ) =  0.0   ( 6 , 9 ) =  0.0   

( 7 , 0 ) =  0.0   ( 7 , 1 ) =  0.0   ( 7 , 2 ) =  0.0   ( 7 , 3 ) =  0.0   ( 7 , 4 ) =  0.0   ( 7 , 5 ) =  0.0   ( 7 , 6 ) =  0.0   ( 7 , 7 ) =  0.0   ( 7 , 8 ) =  0.0   ( 7 , 9 ) =  0.0   

( 8 , 0 ) =  0.0   ( 8 , 1 ) =  0.0   ( 8 , 2 ) =  0.0   ( 8 , 3 ) =  0.0   ( 8 , 4 ) =  0.0   ( 8 , 5 ) =  0.0   ( 8 , 6 ) =  0.0   ( 8 , 7 ) =  0.0   ( 8 , 8 ) =  0.0   ( 8 , 9 ) =  0.0   

( 9 , 0 ) =  0.0   ( 9 , 1 ) =  0.0   ( 9 , 2 ) =  0.0   ( 9 , 3 ) =  0.0   ( 9 , 4 ) =  0.0   ( 9 , 5 ) =  0.0   ( 9 , 6 ) =  0.0   ( 9 , 7 ) =  0.0   ( 9 , 8 ) =  0.0   ( 9 , 9 ) =  inf   



********************************************************************************
ind:
0 1 4 6 6 7 7 7 7 7 8 
col:
0 0 1 2 0 2 5 9 
val:
4.0 == 8.0 == 5.6 == 6.7 == 5.0 == 4.5e+20 == 98374983.0938 == inf == 
================================================================================
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(2, 3) with 3 non zero values <Storage scheme: General and without zeros>
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
1.000000+1.000000j 1.000000-1.000000j 2.000000+1.000000j 
[ 1.+1.j  1.+1.j  0.-2.j]
================================================================================
CSRSparseMatrix [INT64_t, COMPLEX64_t] of size=(2, 3) with 3 non zero values <Storage scheme: General and without zeros>
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
1.000000+1.000000j 1.000000-1.000000j 2.000000+1.000000j 
[ 0.+0.j  0.-2.j]
[ 0.+0.j  0.-2.j]
LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(3, 4) with 3 non zero values <Storage scheme: General and without zeros>
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
1.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
1.000000+0.000000j 2.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
[[ 0.0+0.0j  0.0+0.0j  0.0+0.0j  0.0+0.0j]
 [ 1.0+0.0j  0.0+0.0j  0.0+0.0j  0.0+0.0j]
 [ 1.0+0.0j  2.0+0.0j  0.0+0.0j  0.0+0.0j]]
********************************************************************************
[[ 0.0+0.0j  0.0+0.0j  0.0+0.0j  0.0+0.0j]
 [ 1.0+0.0j  0.0+0.0j  0.0+0.0j  0.0+0.0j]
 [ 1.0+0.0j  2.0+0.0j  0.0+0.0j  0.0+0.0j]]
********************************************************************************
[[ 0.0+0.0j  0.0+0.0j  0.0+0.0j  0.0+0.0j]
 [ 1.0+0.0j  0.0+0.0j  0.0+0.0j  0.0+0.0j]
 [ 1.0+0.0j  2.0+0.0j  0.0+0.0j  0.0+0.0j]]
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 0 non zero values <Storage scheme: General and without zeros>
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     


<type 'cysparse.sparse.ll_mat_matrices.ll_mat_INT64_t_FLOAT64_t.LLSparseMatrix_INT64_t_FLOAT64_t'>
64
6400
1040
80
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 10 non zero values <Storage scheme: General and without zeros>
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
================================================================================
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 10 non zero values <Storage scheme: General and without zeros>
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  1.000000  2.000000  3.000000  4.000000  5.000000  6.000000  7.000000  8.000000  9.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
================================================================================
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 10 non zero values <Storage scheme: General and without zeros>
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  1.000000  4.000000  9.000000 16.000000 25.000000 36.000000 49.000000 64.000000 81.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 100 non zero values <Storage scheme: General and without zeros>
 1.000000   2.000000   3.000000   4.000000   5.000000   6.000000   7.000000   8.000000   9.000000  10.000000  
11.000000  12.000000  13.000000  14.000000  15.000000  16.000000  17.000000  18.000000  19.000000  20.000000  
21.000000  22.000000  23.000000  24.000000  25.000000  26.000000  27.000000  28.000000  29.000000  30.000000  
31.000000  32.000000  33.000000  34.000000  35.000000  36.000000  37.000000  38.000000  39.000000  40.000000  
41.000000  42.000000  43.000000  44.000000  45.000000  46.000000  47.000000  48.000000  49.000000  50.000000  
51.000000  52.000000  53.000000  54.000000   5.50e+01   5.60e+01   5.70e+01   5.80e+01   5.90e+01   6.00e+01  
 6.10e+01   6.20e+01   6.30e+01   6.40e+01   6.50e+01   6.60e+01   6.70e+01   6.80e+01   6.90e+01   7.00e+01  
 7.10e+01   7.20e+01   7.30e+01   7.40e+01   7.50e+01   7.60e+01   7.70e+01   7.80e+01   7.90e+01   8.00e+01  
 8.10e+01   8.20e+01   8.30e+01   8.40e+01   8.50e+01   8.60e+01   8.70e+01   8.80e+01   8.90e+01   9.00e+01  
 9.10e+01   9.20e+01   9.30e+01   9.40e+01   9.50e+01   9.60e+01   9.70e+01   9.80e+01   9.90e+01   1.00e+02  


================================================================================
================================================================================
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(7, 10) with 70 non zero values <Storage scheme: General and without zeros>
11.000000  12.000000  13.000000  14.000000  15.000000  16.000000  17.000000  18.000000  19.000000  20.000000  
41.000000  42.000000  43.000000  44.000000  45.000000  46.000000  47.000000  48.000000  49.000000  50.000000  
51.000000  52.000000  53.000000  54.000000   5.50e+01   5.60e+01   5.70e+01   5.80e+01   5.90e+01   6.00e+01  
 6.10e+01   6.20e+01   6.30e+01   6.40e+01   6.50e+01   6.60e+01   6.70e+01   6.80e+01   6.90e+01   7.00e+01  
 7.10e+01   7.20e+01   7.30e+01   7.40e+01   7.50e+01   7.60e+01   7.70e+01   7.80e+01   7.90e+01   8.00e+01  
 8.10e+01   8.20e+01   8.30e+01   8.40e+01   8.50e+01   8.60e+01   8.70e+01   8.80e+01   8.90e+01   9.00e+01  
 9.10e+01   9.20e+01   9.30e+01   9.40e+01   9.50e+01   9.60e+01   9.70e+01   9.80e+01   9.90e+01   1.00e+02  


LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(3, 4) with 12 non zero values <Storage scheme: General and without zeros>
1.000000+0.000000j 4.000000+0.000000j 7.000000+0.000000j 10.000000+0.000000j 
2.000000+0.000000j 5.000000+0.000000j 8.000000+0.000000j 11.000000+0.000000j 
3.000000+0.000000j 6.000000+0.000000j 9.000000+0.000000j 12.000000+0.000000j 
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 15 non zero values <Storage scheme: Symmetric and with zeros>
 1.000000     ---        ---        ---        ---     
 2.000000   3.000000     ---        ---        ---     
 4.000000   5.000000   6.000000     ---        ---     
 7.000000   8.000000   9.000000  10.000000     ---     
11.000000  12.000000  13.000000  14.000000  15.000000  


LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 15 non zero values <Storage scheme: Symmetric and with zeros>
 1.000000     ---        ---        ---        ---     
 2.000000   3.000000     ---        ---        ---     
 4.000000   5.000000   6.000000     ---        ---     
 7.000000   8.000000   9.000000  10.000000     ---     
11.000000  12.000000  13.000000  14.000000  15.000000  


** k = 0
nnz = 15
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 15 non zero values <Storage scheme: General and with zeros>
 1.000000     ---        ---        ---        ---     
 2.000000   3.000000     ---        ---        ---     
 4.000000   5.000000   6.000000     ---        ---     
 7.000000   8.000000   9.000000  10.000000     ---     
11.000000  12.000000  13.000000  14.000000  15.000000  


** k = -1
nnz = 10
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 10 non zero values <Storage scheme: General and with zeros>
   ---        ---        ---        ---        ---     
 2.000000     ---        ---        ---        ---     
 4.000000   5.000000     ---        ---        ---     
 7.000000   8.000000   9.000000     ---        ---     
11.000000  12.000000  13.000000  14.000000     ---     


** k = -2
nnz = 6
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 6 non zero values <Storage scheme: General and with zeros>
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
 4.000000     ---        ---        ---        ---     
 7.000000   8.000000     ---        ---        ---     
11.000000  12.000000  13.000000     ---        ---     


** k = -3
nnz = 3
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 3 non zero values <Storage scheme: General and with zeros>
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
 7.000000     ---        ---        ---        ---     
11.000000  12.000000     ---        ---        ---     


** k = -4
nnz = 1
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 1 non zero values <Storage scheme: General and with zeros>
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
11.000000     ---        ---        ---        ---     


22222222222222222222222222222222222222222222222222222222222222222222222222222222
** k = 0
nnz = 15
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 15 non zero values <Storage scheme: General and with zeros>
 1.000000   2.000000   4.000000   7.000000  11.000000  
   ---      3.000000   5.000000   8.000000  12.000000  
   ---        ---      6.000000   9.000000  13.000000  
   ---        ---        ---     10.000000  14.000000  
   ---        ---        ---        ---     15.000000  


** k = 1
nnz = 10
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 10 non zero values <Storage scheme: General and with zeros>
   ---      2.000000   4.000000   7.000000  11.000000  
   ---        ---      5.000000   8.000000  12.000000  
   ---        ---        ---      9.000000  13.000000  
   ---        ---        ---        ---     14.000000  
   ---        ---        ---        ---        ---     


** k = 2
nnz = 6
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 6 non zero values <Storage scheme: General and with zeros>
   ---        ---      4.000000   7.000000  11.000000  
   ---        ---        ---      8.000000  12.000000  
   ---        ---        ---        ---     13.000000  
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     


** k = 3
nnz = 3
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 3 non zero values <Storage scheme: General and with zeros>
   ---        ---        ---      7.000000  11.000000  
   ---        ---        ---        ---     12.000000  
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     


** k = 4
nnz = 1
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 5) with 1 non zero values <Storage scheme: General and with zeros>
   ---        ---        ---        ---     11.000000  
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---     


LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 0 non zero values <Storage scheme: General and without zeros>
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     


<type 'cysparse.sparse.ll_mat_matrices.ll_mat_INT64_t_FLOAT64_t.LLSparseMatrix_INT64_t_FLOAT64_t'>
64
6400
1040
80
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 5 non zero values <Storage scheme: General and without zeros>
      nan     ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---      5.600000   6.700000     ---        ---        ---        ---        ---        ---        ---     
   ---        ---      4.50e+20     ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---           inf  


4.5e+20
nan
[(0, 0), (1, 1), (1, 2), (2, 2), (9, 9)]
[nan, 5.6, 6.7, 4.5e+20, inf]
[((0, 0), nan), ((1, 1), 5.6), ((1, 2), 6.7), ((2, 2), 4.5e+20), ((9, 9), inf)]
(array([0, 1, 1, 2, 9]), array([0, 1, 2, 2, 9]), array([             nan,   5.60000000e+00,   6.70000000e+00,
         4.50000000e+20,              inf]))
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 8 non zero values <Storage scheme: General and without zeros>
 4.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 8.000000  5.600000  6.700000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 5.000000  0.000000 450000000000000000000.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 98374983.093843  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000       inf 
================================================================================
CSCSparseMatrix ([10,10]):
 4.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 8.000000  5.600000  6.700000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 5.000000  0.000000 450000000000000000000.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000 98374983.093843  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
 0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000       inf 
True
True
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 0 non zero values <Storage scheme: General and without zeros>
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---        ---        ---     


<type 'cysparse.sparse.ll_mat_matrices.ll_mat_INT64_t_FLOAT64_t.LLSparseMatrix_INT64_t_FLOAT64_t'>
64
6400
1040
80
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 100 non zero values <Storage scheme: General and without zeros>
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
================================================================================
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 96 non zero values <Storage scheme: General and without zeros>
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  0.000000  0.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  0.000000  0.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000 
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(2, 3) with 6 non zero values <Storage scheme: General and without zeros>
3.800000+2.300000j -6.200000+21.900002j -16.200001+41.500000j 
-1.200000+12.100000j -11.200000+31.700001j -21.200001+51.299999j 
[ 1.+1.j  1.+1.j]
================================================================================
CSCSparseMatrix ([2,3]):
3.800000+2.300000j -6.200000+21.900002j -16.200001+41.500000j 
-1.200000+12.100000j -11.200000+31.700001j -21.200001+51.299999j 
[ 17.00000000 -11.80000019j  36.20000076 -71.j          55.39999771-130.19999695j]
[ 17.00000000 -11.80000019j  36.20000076 -71.j          55.39999771-130.19999695j]

[ -11.80000019+17.j          -71.00000000+36.20000076j
 -130.19999695+55.39999771j]
[ -11.80000019+17.j          -71.00000000+36.20000076j
 -130.19999695+55.39999771j]
================================================================================
Symmetric case (non C-contiguous)
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(3, 3) with 5 non zero values <Storage scheme: Symmetric and without zeros>
0.000000+0.000000j 1.000000+0.000000j 3.000000+0.000000j 
1.000000+0.000000j 2.000000+0.000000j 4.000000+0.000000j 
3.000000+0.000000j 4.000000+0.000000j 5.000000+0.000000j 
CSCSparseMatrix ([3,3]):
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
1.000000+0.000000j 2.000000+0.000000j 0.000000+0.000000j 
3.000000+0.000000j 4.000000+0.000000j 5.000000+0.000000j 
[ 1.-5.j  3.-5.j  7.-3.j]
[ 1.-5.j  3.-5.j  7.-3.j]
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(5, 34) with 170 non zero values <Storage scheme: General and without zeros>
 1.000000   2.000000   3.000000   4.000000   5.000000   6.000000   7.000000   8.000000   9.000000  10.000000  11.000000  
35.000000  36.000000  37.000000  38.000000  39.000000  40.000000  41.000000  42.000000  43.000000  44.000000      ...    
 6.90e+01   7.00e+01   7.10e+01   7.20e+01   7.30e+01   7.40e+01   7.50e+01   7.60e+01   7.70e+01      ...     1.02e+02  
 1.03e+02   1.04e+02   1.05e+02   1.06e+02   1.07e+02   1.08e+02   1.09e+02   1.10e+02      ...     1.35e+02   1.36e+02  
 1.37e+02   1.38e+02   1.39e+02   1.40e+02   1.41e+02   1.42e+02   1.43e+02      ...     1.68e+02   1.69e+02   1.70e+02  


True
********************************************************************************
True
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(4, 4) with 10 non zero values <Storage scheme: Symmetric and without zeros>
 1.000000     ---        ---        ---     
 2.000000   3.000000     ---        ---     
 4.000000   5.000000   6.000000     ---     
 7.000000   8.000000   9.000000  10.000000  


ind:
0 4 7 9 10 
row:
0 1 2 3 1 2 3 2 3 3 
val:
1.0 == 2.0 == 4.0 == 7.0 == 3.0 == 5.0 == 8.0 == 6.0 == 9.0 == 10.0 == 
<cysparse.linalg.suitesparse.cholmod.cholmod_INT64_t_FLOAT64_t.CholmodContext_INT64_t_FLOAT64_t object at 0x1db9f30>
3.0.3 (Oct 23, 2014)
CHOLMOD version 3000
3.0.3 (Oct 23, 2014)
3
4
Checking if internal matrix is OK: True

CHOLMOD version 3.0.3, Oct 23, 2014: cholmod_common_struct: status: OK
  Architecture: Linux
    sizeof(int):      4
    sizeof(SuiteSparse_long):  8
    sizeof(void *):   8
    sizeof(double):   8
    sizeof(Int):      8 (CHOLMOD's basic integer)
    sizeof(BLAS_INT): 4 (integer used in the BLAS)
  memory blocks in use:           0
  memory in use (MB):           0.0
  peak memory usage (MB):       0.0
  maxrank:    update/downdate rank:   8
  supernodal control: 1 40 (supernodal if flops/lnz >= 40)
  nmethods=0: default strategy:  Try user permutation if given.  Try AMD.
    Select best ordering tried.
    method 0: user permutation (if given)
    method 1: AMD (or COLAMD if factorizing AA')
        prune_dense: for pruning dense nodes:   10
        a dense node has degree >= max(16,(10)*sqrt(n))
  final_asis: TRUE, leave as is
  dbound:  LDL' diagonal threshold:  0
    Entries with abs. value less than dbound are replaced with +/- dbound.
  grow0: memory reallocation:  1.2
  grow1: memory reallocation:  1.2
  grow2: memory reallocation: 5
  nrelax, zrelax:  supernodal amalgamation rule:
    s = # columns in two adjacent supernodes
    z = % of zeros in new supernode if they are merged.
    Two supernodes are merged if (s <= 4) or (no new zero entries) or
    (s <= 16 and z < 80%) or (s <= 48 and z < 10%) or (z < 5%)
  OK


CHOLMOD sparse:  cholmod_sparse_matrix:  4-by-4, nz 10, lower.
  nzmax 10, sorted, packed, 
  scalar types: SuiteSparse_long, real, double
  col 0: nz 4 start 0 end 4:
         0: 1
         1: 2
         2: 4
         3: 7
  col 1: nz 3 start 4 end 7:
         1: 3
         2: 5
    ...
  col 3: nz 1 start 9 end 10:
         3: 10
  nnz on diagonal: 4
  OK

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Factor OK? True
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
[-1.  1.  0. -0.]
LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(10, 10) with 96 non zero values <Storage scheme: General and with zeros>
 1.000000 + 0.000000j  2.000000 + 0.000000j  3.000000 + 0.000000j  4.000000 + 0.000000j  5.000000 + 0.000000j 
11.000000 + 0.000000j 12.000000 + 0.000000j 13.000000 + 0.000000j 14.000000 + 0.000000j     ...        ...    
21.000000 + 0.000000j 22.000000 + 0.000000j 23.000000 + 0.000000j     ...        ...    30.000000 + 0.000000j 
31.000000 + 0.000000j 32.000000 + 0.000000j     ...        ...    39.000000 + 0.000000j 40.000000 + 0.000000j 
41.000000 + 0.000000j     ...        ...    48.000000 + 0.000000j 49.000000 + 0.000000j 50.000000 + 0.000000j 
    ...        ...     5.70e+01 + 0.00e+00j  5.80e+01 + 0.00e+00j  5.90e+01 + 0.00e+00j  6.00e+01 + 0.00e+00j 
 6.60e+01 + 0.00e+00j  6.70e+01 + 0.00e+00j  6.80e+01 + 0.00e+00j  6.90e+01 + 0.00e+00j  7.00e+01 + 0.00e+00j 
 7.60e+01 + 0.00e+00j  7.70e+01 + 0.00e+00j  7.80e+01 + 0.00e+00j  7.90e+01 + 0.00e+00j  8.00e+01 + 0.00e+00j 
 8.60e+01 + 0.00e+00j  8.70e+01 + 0.00e+00j  8.80e+01 + 0.00e+00j  8.90e+01 + 0.00e+00j  9.00e+01 + 0.00e+00j 
 9.60e+01 + 0.00e+00j  9.70e+01 + 0.00e+00j  9.80e+01 + 0.00e+00j  9.90e+01 + 0.00e+00j  1.00e+02 + 0.00e+00j 


88888888888888888888888888888888888888888888888888888888888888888888888888888888
 1.00e+25 + 0.00e+00j    0.00e+00 + 0.00e+00j    3.000000 + 0.000000j    4.000000 + 0.000000j    5.000000 + 0.000000j    6.000000 + 0.000000j    7.000000 + 0.000000j    8.000000 + 0.000000j    9.000000 + 0.000000j   10.000000 + 0.000000j  
11.000000 + 0.000000j   12.000000 + 0.000000j   13.000000 + 0.000000j   14.000000 + 0.000000j      ---        ---          ---        ---       17.000000 + 0.000000j   18.000000 + 0.000000j   19.000000 + 0.000000j   20.000000 + 0.000000j  
21.000000 + 0.000000j   22.000000 + 0.000000j   23.000000 + 0.000000j   24.000000 + 0.000000j      ---        ---          ---        ---       27.000000 + 0.000000j   28.000000 + 0.000000j   29.000000 + 0.000000j   30.000000 + 0.000000j  
31.000000 + 0.000000j   32.000000 + 0.000000j   33.000000 + 0.000000j   34.000000 + 0.000000j   35.000000 + 0.000000j   36.000000 + 0.000000j   37.000000 + 0.000000j   38.000000 + 0.000000j   39.000000 + 0.000000j   40.000000 + 0.000000j  
41.000000 + 0.000000j   42.000000 + 0.000000j   43.000000 + 0.000000j   44.000000 + 0.000000j   45.000000 + 0.000000j   46.000000 + 0.000000j   47.000000 + 0.000000j   48.000000 + 0.000000j   49.000000 + 0.000000j   50.000000 + 0.000000j  
51.000000 + 0.000000j   52.000000 + 0.000000j   53.000000 + 0.000000j   54.000000 + 0.000000j    5.50e+01 + 0.00e+00j    5.60e+01 + 0.00e+00j    5.70e+01 + 0.00e+00j    5.80e+01 + 0.00e+00j    5.90e+01 + 0.00e+00j    6.00e+01 + 0.00e+00j  
 6.10e+01 + 0.00e+00j    6.20e+01 + 0.00e+00j    6.30e+01 + 0.00e+00j    6.40e+01 + 0.00e+00j    6.50e+01 + 0.00e+00j    6.60e+01 + 0.00e+00j    6.70e+01 + 0.00e+00j    6.80e+01 + 0.00e+00j    6.90e+01 + 0.00e+00j    7.00e+01 + 0.00e+00j  
 7.10e+01 + 0.00e+00j    7.20e+01 + 0.00e+00j    7.30e+01 + 0.00e+00j    7.40e+01 + 0.00e+00j    7.50e+01 + 0.00e+00j    7.60e+01 + 0.00e+00j    7.70e+01 + 0.00e+00j    7.80e+01 + 0.00e+00j    7.90e+01 + 0.00e+00j    8.00e+01 + 0.00e+00j  
 8.10e+01 + 0.00e+00j    8.20e+01 + 0.00e+00j    8.30e+01 + 0.00e+00j    8.40e+01 + 0.00e+00j    8.50e+01 + 0.00e+00j    8.60e+01 + 0.00e+00j    8.70e+01 + 0.00e+00j    8.80e+01 + 0.00e+00j    8.90e+01 + 0.00e+00j    9.00e+01 + 0.00e+00j  
 9.10e+01 + 0.00e+00j    9.20e+01 + 0.00e+00j    9.30e+01 + 0.00e+00j    9.40e+01 + 0.00e+00j    9.50e+01 + 0.00e+00j    9.60e+01 + 0.00e+00j    9.70e+01 + 0.00e+00j    9.80e+01 + 0.00e+00j    9.90e+01 + 0.00e+00j    1.00e+02 + 0.00e+00j  
LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(10, 10) with 96 non zero values <Storage scheme: General and with zeros>
10000000000000000905969664.000000+0.000000j 0.000000+0.000000j 3.000000+0.000000j 4.000000+0.000000j 5.000000+0.000000j 6.000000+0.000000j 7.000000+0.000000j 8.000000+0.000000j 9.000000+0.000000j 10.000000+0.000000j 
11.000000+0.000000j 12.000000+0.000000j 13.000000+0.000000j 14.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 17.000000+0.000000j 18.000000+0.000000j 19.000000+0.000000j 20.000000+0.000000j 
21.000000+0.000000j 22.000000+0.000000j 23.000000+0.000000j 24.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 27.000000+0.000000j 28.000000+0.000000j 29.000000+0.000000j 30.000000+0.000000j 
31.000000+0.000000j 32.000000+0.000000j 33.000000+0.000000j 34.000000+0.000000j 35.000000+0.000000j 36.000000+0.000000j 37.000000+0.000000j 38.000000+0.000000j 39.000000+0.000000j 40.000000+0.000000j 
41.000000+0.000000j 42.000000+0.000000j 43.000000+0.000000j 44.000000+0.000000j 45.000000+0.000000j 46.000000+0.000000j 47.000000+0.000000j 48.000000+0.000000j 49.000000+0.000000j 50.000000+0.000000j 
51.000000+0.000000j 52.000000+0.000000j 53.000000+0.000000j 54.000000+0.000000j 55.000000+0.000000j 56.000000+0.000000j 57.000000+0.000000j 58.000000+0.000000j 59.000000+0.000000j 60.000000+0.000000j 
61.000000+0.000000j 62.000000+0.000000j 63.000000+0.000000j 64.000000+0.000000j 65.000000+0.000000j 66.000000+0.000000j 67.000000+0.000000j 68.000000+0.000000j 69.000000+0.000000j 70.000000+0.000000j 
71.000000+0.000000j 72.000000+0.000000j 73.000000+0.000000j 74.000000+0.000000j 75.000000+0.000000j 76.000000+0.000000j 77.000000+0.000000j 78.000000+0.000000j 79.000000+0.000000j 80.000000+0.000000j 
81.000000+0.000000j 82.000000+0.000000j 83.000000+0.000000j 84.000000+0.000000j 85.000000+0.000000j 86.000000+0.000000j 87.000000+0.000000j 88.000000+0.000000j 89.000000+0.000000j 90.000000+0.000000j 
91.000000+0.000000j 92.000000+0.000000j 93.000000+0.000000j 94.000000+0.000000j 95.000000+0.000000j 96.000000+0.000000j 97.000000+0.000000j 98.000000+0.000000j 99.000000+0.000000j 100.000000+0.000000j 
View to LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(4, 4) with 16 non zero values <Storage scheme: General and without zeros>
13.000000 + 0.000000j 13.000000 + 0.000000j 13.000000 + 0.000000j 14.000000 + 0.000000j 
23.000000 + 0.000000j 23.000000 + 0.000000j 23.000000 + 0.000000j 24.000000 + 0.000000j 
33.000000 + 0.000000j 33.000000 + 0.000000j 33.000000 + 0.000000j 34.000000 + 0.000000j 
43.000000 + 0.000000j 43.000000 + 0.000000j 43.000000 + 0.000000j 44.000000 + 0.000000j 


16
********************************************************************************
LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 55 non zero values <Storage scheme: Symmetric and without zeros>
 1.000000     ---        ---        ---        ---        ---        ---        ---        ---        ---     
 2.000000   3.000000     ---        ---        ---        ---        ---        ---        ---        ---     
 4.000000   5.000000   6.000000     ---        ---        ---        ---        ---        ---        ---     
 7.000000   8.000000   9.000000  10.000000     ---        ---        ---        ---        ---        ---     
11.000000  12.000000  13.000000  14.000000  15.000000     ---        ---        ---        ---        ---     
16.000000  17.000000  18.000000  19.000000  20.000000  21.000000     ---        ---        ---        ---     
22.000000  23.000000  24.000000  25.000000  26.000000  27.000000  28.000000     ---        ---        ---     
29.000000  30.000000  31.000000  32.000000  33.000000  34.000000  35.000000  36.000000     ---        ---     
37.000000  38.000000  39.000000  40.000000  41.000000  42.000000  43.000000  44.000000  45.000000     ---     
46.000000  47.000000  48.000000  49.000000  50.000000  51.000000  52.000000  53.000000  54.000000   5.50e+01  


LLSparseMatrix [INT64_t, FLOAT64_t] of size=(10, 10) with 55 non zero values <Storage scheme: Symmetric and without zeros>
 1.000000  2.000000  4.000000  7.000000 11.000000 16.000000 22.000000 29.000000 37.000000 46.000000 
 2.000000  3.000000  5.000000  8.000000 12.000000 17.000000 23.000000 30.000000 38.000000 47.000000 
 4.000000  5.000000  6.000000  9.000000 13.000000 18.000000 24.000000 31.000000 39.000000 48.000000 
 7.000000  8.000000  9.000000 10.000000 14.000000 19.000000 25.000000 32.000000 40.000000 49.000000 
11.000000 12.000000 13.000000 14.000000 15.000000 20.000000 26.000000 33.000000 41.000000 50.000000 
16.000000 17.000000 18.000000 19.000000 20.000000 21.000000 27.000000 34.000000 42.000000 51.000000 
22.000000 23.000000 24.000000 25.000000 26.000000 27.000000 28.000000 35.000000 43.000000 52.000000 
29.000000 30.000000 31.000000 32.000000 33.000000 34.000000 35.000000 36.000000 44.000000 53.000000 
37.000000 38.000000 39.000000 40.000000 41.000000 42.000000 43.000000 44.000000 45.000000 54.000000 
46.000000 47.000000 48.000000 49.000000 50.000000 51.000000 52.000000 53.000000 54.000000 55.000000 
View to LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(4, 3) with 12 non zero values <Storage scheme: General and without zeros>
13.000000 + 0.000000j 13.000000 + 0.000000j 14.000000 + 0.000000j 
23.000000 + 0.000000j 23.000000 + 0.000000j 24.000000 + 0.000000j 
33.000000 + 0.000000j 33.000000 + 0.000000j 34.000000 + 0.000000j 
43.000000 + 0.000000j 43.000000 + 0.000000j 44.000000 + 0.000000j 


12
44444444444444444444444444444444444444444444444444444444444444444444444444444444
LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(10, 10) with 96 non zero values <Storage scheme: General and with zeros>
 1.00e+25 + 0.00e+00j  0.00e+00 + 0.00e+00j  3.000000 + 0.000000j  4.000000 + 0.000000j  5.000000 + 0.000000j 
11.000000 + 0.000000j 12.000000 + 0.000000j 13.000000 + 0.000000j 14.000000 + 0.000000j     ...        ...    
21.000000 + 0.000000j 22.000000 + 0.000000j 23.000000 + 0.000000j     ...        ...    30.000000 + 0.000000j 
31.000000 + 0.000000j 32.000000 + 0.000000j     ...        ...    39.000000 + 0.000000j 40.000000 + 0.000000j 
41.000000 + 0.000000j     ...        ...    48.000000 + 0.000000j 49.000000 + 0.000000j 50.000000 + 0.000000j 
    ...        ...     5.70e+01 + 0.00e+00j  5.80e+01 + 0.00e+00j  5.90e+01 + 0.00e+00j  6.00e+01 + 0.00e+00j 
 6.60e+01 + 0.00e+00j  6.70e+01 + 0.00e+00j  6.80e+01 + 0.00e+00j  6.90e+01 + 0.00e+00j  7.00e+01 + 0.00e+00j 
 7.60e+01 + 0.00e+00j  7.70e+01 + 0.00e+00j  7.80e+01 + 0.00e+00j  7.90e+01 + 0.00e+00j  8.00e+01 + 0.00e+00j 
 8.60e+01 + 0.00e+00j  8.70e+01 + 0.00e+00j  8.80e+01 + 0.00e+00j  8.90e+01 + 0.00e+00j  9.00e+01 + 0.00e+00j 
 9.60e+01 + 0.00e+00j  9.70e+01 + 0.00e+00j  9.80e+01 + 0.00e+00j  9.90e+01 + 0.00e+00j  1.00e+02 + 0.00e+00j 


99999999999999999999999999999999999999999999999999999999999999999999999999999999
LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(10, 10) with 100 non zero values <Storage scheme: General and with zeros>
 1.000000 + 0.000000j  2.000000 + 0.000000j  3.000000 + 0.000000j  4.000000 + 0.000000j  5.000000 + 0.000000j 
11.000000 + 0.000000j 12.000000 + 0.000000j 13.000000 + 0.000000j 14.000000 + 0.000000j     ...        ...    
21.000000 + 0.000000j 22.000000 + 0.000000j 23.000000 + 0.000000j     ...        ...    30.000000 + 0.000000j 
31.000000 + 0.000000j 32.000000 + 0.000000j     ...        ...    39.000000 + 0.000000j 40.000000 + 0.000000j 
41.000000 + 0.000000j     ...        ...    48.000000 + 0.000000j 49.000000 + 0.000000j 50.000000 + 0.000000j 
    ...        ...     5.70e+01 + 0.00e+00j  5.80e+01 + 0.00e+00j  5.90e+01 + 0.00e+00j  6.00e+01 + 0.00e+00j 
 6.60e+01 + 0.00e+00j  6.70e+01 + 0.00e+00j  6.80e+01 + 0.00e+00j  6.90e+01 + 0.00e+00j  7.00e+01 + 0.00e+00j 
 7.60e+01 + 0.00e+00j  7.70e+01 + 0.00e+00j  7.80e+01 + 0.00e+00j  7.90e+01 + 0.00e+00j  8.00e+01 + 0.00e+00j 
 8.60e+01 + 0.00e+00j  8.70e+01 + 0.00e+00j  8.80e+01 + 0.00e+00j  8.90e+01 + 0.00e+00j  9.00e+01 + 0.00e+00j 
 9.60e+01 + 0.00e+00j  9.70e+01 + 0.00e+00j  9.80e+01 + 0.00e+00j  9.90e+01 + 0.00e+00j  1.00e+02 + 0.00e+00j 


View to LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(3, 3) with 9 non zero values <Storage scheme: General and without zeros>
 1.000000 + 0.000000j  2.000000 + 0.000000j  3.000000 + 0.000000j 
11.000000 + 0.000000j 12.000000 + 0.000000j 13.000000 + 0.000000j 
21.000000 + 0.000000j 22.000000 + 0.000000j 23.000000 + 0.000000j 


View to LLSparseMatrix [INT64_t, COMPLEX256_t] of size=(3, 3) with 9 non zero values <Storage scheme: General and without zeros>
13.000000 + 0.000000j 13.000000 + 0.000000j 14.000000 + 0.000000j 
23.000000 + 0.000000j 23.000000 + 0.000000j 24.000000 + 0.000000j 
33.000000 + 0.000000j 33.000000 + 0.000000j 34.000000 + 0.000000j 


before
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(3, 4) with 3 non zero values <Storage scheme: General and without zeros>
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
1.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
1.000000+0.000000j 2.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
99999999999999999999999999999999999999999999999999999999999999999999999999999999
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(4, 4) with 3 non zero values <Storage scheme: Symmetric and without zeros>
 2.000000 + 0.000000j    ---        ---        ---        ---        ---        ---     
 2.000000 + 0.000000j  4.000000 + 0.000000j    ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---     
   ---        ---        ---        ---        ---        ---        ---        ---     


LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(4, 4) with 3 non zero values <Storage scheme: Symmetric and without zeros>
2.000000+0.000000j 2.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
2.000000+0.000000j 4.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
********************************************************************************
LLSparseMatrix [INT64_t, COMPLEX64_t] of size=(4, 4) with 3 non zero values <Storage scheme: Symmetric and without zeros>
5.000000+0.000000j 6.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
6.000000+0.000000j 12.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 0.000000+0.000000j 
LLSparseMatrix [INT32_t, FLOAT64_t] of size=(2873, 2873) with 657 non zero values <Storage scheme: Symmetric and without zeros>
Matrix too big to print out
matvec_tests.py
put_diagonal.py
matdot.py
cp_types.py
ll_mat_arrowheads.py
csc_transposed.py
sylvain_lldl.py
tril.py
shift.py
to_csr.py
csr_ordering.py
issue167.py
update_add_at.py
csr_conjugate.py
mumps_real.py
ndarray.py
col_scale.py
delete_row.py
ll_mat_linear_fill.py
ll_mat_tril.py
csc_ordering.py
clear_submatrix.py
csc_conjugate_tranposed.py
csc_to_csr_sorted_index.py
cholmod.py
ll_mat_views.py
matdot_transp_self.py
mm_symmetric_matrix.py
