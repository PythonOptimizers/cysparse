from cysparse.types.cysparse_types cimport *

from cysparse.sparse.sparse_mat_matrices.sparse_mat_@index@_@type@ cimport MutableSparseMatrix_@index@_@type@
#from cysparse.sparse.ll_mat_view cimport LLSparseMatrixView

cimport numpy as cnp

from cpython cimport PyObject

cdef class LLSparseMatrix_@index@_@type@(MutableSparseMatrix_@index@_@type@):
    """
    Linked-List Format matrix.

    Note:
        Despite its name, this matrix doesn't use any linked list.
    """
    ####################################################################################################################
    # Init/Free/Memory
    ####################################################################################################################
    cdef:
        @index@  free      # index to first element in free chain
        @type@  *val       # pointer to array of values
        @index@ *col       # pointer to array of indices, see doc
        @index@ *link      # pointer to array of indices, see doc
        @index@ *root      # pointer to array of indices, see doc

    cdef _realloc(self, @index@ nalloc_new)
    cdef _realloc_expand(self)

    ####################################################################################################################
    # CREATE SUB-MATRICES
    ####################################################################################################################
    # TODO: implement method or scrap it
    cdef create_submatrix(self, PyObject* obj1, PyObject* obj2)

    ####################################################################################################################
    # SET/GET
    ####################################################################################################################
    cdef put(self, @index@ i, @index@ j, @type@ value)
    cdef safe_put(self, @index@ i, @index@ j, @type@ value)
    #cdef assign(self, LLSparseMatrixView view, obj)

    cdef @type@ at(self, @index@ i, @index@ j)
    cdef @type@ safe_at(self, @index@ i, @index@ j)

    cpdef object keys(self)
    cpdef object values(self)
    cpdef object items(self)
    cpdef find(self)



#cdef @index@ * create_c_array_indices_from_python_object_@index@(@index@ max_length, PyObject * obj, @index@ * number_of_elements) except NULL